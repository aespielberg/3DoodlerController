#!/usr/bin/env python
# -*- coding: utf-8 -*-

import numpy as np
import time
import sys
import pickle
import random
import copy
import IPython
from itertools import izip,product,combinations,chain

import openravepy as orpy
import youbotpy
from youbotpy import youbotik as yik

simulation = True
robotnames = ['drc1', 'drc3']
youbotenv = youbotpy.YoubotEnv(sim=simulation,viewer=True,env_xml='environments/espresso.env.xml', \
                               youbot_names=robotnames)
env = youbotenv.env
youbots = youbotenv.youbots

yik.init(youbots[youbots.keys()[0]]) #   does not matter which robot
                                     # we use to initialize since 
                                     # all youbots have same kinematics.

IPython.embed()

basemanips = {}
for name in robotnames:
    basemanips[name] = orpy.interfaces.BaseManipulation(youbots[name],plannername='BiRRT')

def MoveArmTo(robot,goal,planner):
    with env:
        robot.SetActiveDOFs(range(5))
        traj = planner.MoveActiveJoints(goal=goal,maxiter=5000,steplength=0.15,maxtries=2,outputtrajobj=True)
        #print traj.serialize().replace("\\n","\n")
    while not robot.GetController().IsDone():
        time.sleep(0.01)
    return traj

def MoveBaseTo(robot,goal,planner):
    xyyaw = np.array([goal[0,3],goal[1,3],np.arctan2(goal[1,0],goal[0,0])])
    return MoveBaseToXYYaw(robot,xyyaw,planner)

def MoveBaseToXYYaw(robot,xyyaw,planner):
    current = robot.GetTransform()
    currentxyyaw = np.array([current[0,3],current[1,3],np.arctan2(current[1,0],current[0,0])])
    if np.linalg.norm(currentxyyaw-xyyaw) < 0.001:
        print robot.GetName(),' already at goal. Not moving.'
        return 
    with env:
        robot.SetActiveDOFs([],orpy.DOFAffine.X|orpy.DOFAffine.Y|orpy.DOFAffine.RotationAxis,[0,0,1])
        traj = planner.MoveActiveJoints(goal=xyyaw,maxiter=5000,steplength=0.15,maxtries=2,execute=False,outputtrajobj=True)
        robot.GetController().SetPath(traj)
    while not robot.GetController().IsDone():
        time.sleep(0.01)
    return traj


time.sleep(2.0)

cup = env.GetKinBody('cup')
pot = env.GetKinBody('pot')

cup_pose = cup.GetTransform()
pot_pose = pot.GetTransform()

backup_dist = 0.1
cup_grasp_backed_up = cup_pose
cup_grasp_backed_up = cup_grasp_backed_up[0,3] - backup_dist
pot_grasp_backed_up = pot_pose
pot_grasp_backed_up = pot_grasp_backed_up[0,3] - backup_dist

desired_ee_in_cup = np.array([[  0.0,   0.0,   1.0, -0.03],
                              [  0.0,   1.0,   0.0, 0.0],
                              [ -1.0,   0.0,   0.0, 0.04],
                              [  0.0,   0.0,   0.0, 1.0]])

desired_ee_in_pot = np.array([[  0.0,   0.0,   1.0, -0.06],
                              [  1.0,   0.0,   0.0,  0.0],
                              [  0.0,   1.0,   0.0,  0.055],
                              [  0.0,   0.0,   0.0,  1.0]])


ee_for_cup = np.dot(cup_pose,desired_ee_in_cup)
ee_for_pot = np.dot(pot_pose,desired_ee_in_pot)

# TODO find ik soln for cup and pot

# TODO plan with drc1 to cup and grab and move out of the way

# TODO plan with drc3 to cup and and grab and move out of the way


IPython.embed()

#traj = MoveArmTo(youbots['drc1'],[0.,0.,0.,0.,0.],basemanip['drc1'])

#IPython.embed()

